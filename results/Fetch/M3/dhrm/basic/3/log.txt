Logging to ../results/Fetch/M3/dhrm/basic/3
scaling actions by [1. 1. 1. 1.] before executing in env
setting up param noise
  param_noise_actor/mlp_fc0/w:0 <- actor/mlp_fc0/w:0 + noise
  param_noise_actor/mlp_fc0/b:0 <- actor/mlp_fc0/b:0 + noise
  param_noise_actor/mlp_fc1/w:0 <- actor/mlp_fc1/w:0 + noise
  param_noise_actor/mlp_fc1/b:0 <- actor/mlp_fc1/b:0 + noise
  param_noise_actor/dense/kernel:0 <- actor/dense/kernel:0 + noise
  param_noise_actor/dense/bias:0 <- actor/dense/bias:0 + noise
  adaptive_param_noise_actor/mlp_fc0/w:0 <- actor/mlp_fc0/w:0 + noise
  adaptive_param_noise_actor/mlp_fc0/b:0 <- actor/mlp_fc0/b:0 + noise
  adaptive_param_noise_actor/mlp_fc1/w:0 <- actor/mlp_fc1/w:0 + noise
  adaptive_param_noise_actor/mlp_fc1/b:0 <- actor/mlp_fc1/b:0 + noise
  adaptive_param_noise_actor/dense/kernel:0 <- actor/dense/kernel:0 + noise
  adaptive_param_noise_actor/dense/bias:0 <- actor/dense/bias:0 + noise
setting up actor optimizer
  actor shapes: [[38, 256], [256], [256, 256], [256], [256, 4], [4]]
  actor params: 76804
setting up critic optimizer
  regularizing: critic/mlp_fc0/w:0
  regularizing: critic/mlp_fc1/w:0
  applying l2 regularization with 0.01
  critic shapes: [[42, 256], [256], [256, 256], [256], [256, 1], [1]]
  critic params: 77057
setting up target updates ...
  target_actor/mlp_fc0/w:0 <- actor/mlp_fc0/w:0
  target_actor/mlp_fc0/b:0 <- actor/mlp_fc0/b:0
  target_actor/mlp_fc1/w:0 <- actor/mlp_fc1/w:0
  target_actor/mlp_fc1/b:0 <- actor/mlp_fc1/b:0
  target_actor/dense/kernel:0 <- actor/dense/kernel:0
  target_actor/dense/bias:0 <- actor/dense/bias:0
setting up target updates ...
  target_critic/mlp_fc0/w:0 <- critic/mlp_fc0/w:0
  target_critic/mlp_fc0/b:0 <- critic/mlp_fc0/b:0
  target_critic/mlp_fc1/w:0 <- critic/mlp_fc1/w:0
  target_critic/mlp_fc1/b:0 <- critic/mlp_fc1/b:0
  target_critic/output/kernel:0 <- critic/output/kernel:0
  target_critic/output/bias:0 <- critic/output/bias:0
Using agent with the following configuration:
dict_items([('obs0', <tf.Tensor 'obs0:0' shape=(?, 38) dtype=float32>), ('obs1', <tf.Tensor 'obs1:0' shape=(?, 38) dtype=float32>), ('terminals1', <tf.Tensor 'terminals1:0' shape=(?, 1) dtype=float32>), ('rewards', <tf.Tensor 'rewards:0' shape=(?, 1) dtype=float32>), ('actions', <tf.Tensor 'actions:0' shape=(?, 4) dtype=float32>), ('critic_target', <tf.Tensor 'critic_target:0' shape=(?, 1) dtype=float32>), ('param_noise_stddev', <tf.Tensor 'param_noise_stddev:0' shape=() dtype=float32>), ('gamma', 0.95), ('tau', 0.01), ('memory', <baselines.ddpg.memory.Memory object at 0x7f78b699ccf8>), ('normalize_observations', False), ('normalize_returns', False), ('action_noise', None), ('param_noise', AdaptiveParamNoiseSpec(initial_stddev=0.2, desired_action_stddev=0.2, adoption_coefficient=1.01)), ('action_range', (-1.0, 1.0)), ('return_range', (-inf, inf)), ('observation_range', (-5.0, 5.0)), ('critic', <baselines.ddpg.models.Critic object at 0x7f78b63ceba8>), ('actor', <baselines.ddpg.models.Actor object at 0x7f78b63ceeb8>), ('actor_lr', 0.0001), ('critic_lr', 0.001), ('clip_norm', None), ('enable_popart', False), ('reward_scale', 1.0), ('batch_size', 700), ('stats_sample', None), ('critic_l2_reg', 0.01), ('obs_rms', None), ('ret_rms', None), ('target_actor', <baselines.ddpg.models.Actor object at 0x7f78b63cee48>), ('target_critic', <baselines.ddpg.models.Critic object at 0x7f78b63cee10>), ('actor_tf', <tf.Tensor 'actor/Tanh:0' shape=(?, 4) dtype=float32>), ('normalized_critic_tf', <tf.Tensor 'critic/output/BiasAdd:0' shape=(?, 1) dtype=float32>), ('critic_tf', <tf.Tensor 'clip_by_value_2:0' shape=(?, 1) dtype=float32>), ('normalized_critic_with_actor_tf', <tf.Tensor 'critic_1/output/BiasAdd:0' shape=(?, 1) dtype=float32>), ('critic_with_actor_tf', <tf.Tensor 'clip_by_value_3:0' shape=(?, 1) dtype=float32>), ('target_Q', <tf.Tensor 'add:0' shape=(?, 1) dtype=float32>), ('perturbed_actor_tf', <tf.Tensor 'param_noise_actor/Tanh:0' shape=(?, 4) dtype=float32>), ('perturb_policy_ops', <tf.Operation 'group_deps' type=NoOp>), ('perturb_adaptive_policy_ops', <tf.Operation 'group_deps_1' type=NoOp>), ('adaptive_policy_distance', <tf.Tensor 'Sqrt:0' shape=() dtype=float32>), ('actor_loss', <tf.Tensor 'Neg:0' shape=() dtype=float32>), ('actor_grads', <tf.Tensor 'concat:0' shape=(76804,) dtype=float32>), ('actor_optimizer', <baselines.common.mpi_adam.MpiAdam object at 0x7f78a4616c88>), ('critic_loss', <tf.Tensor 'add_13:0' shape=() dtype=float32>), ('critic_grads', <tf.Tensor 'concat_2:0' shape=(77057,) dtype=float32>), ('critic_optimizer', <baselines.common.mpi_adam.MpiAdam object at 0x7f78a4561588>), ('stats_ops', [<tf.Tensor 'Mean_3:0' shape=() dtype=float32>, <tf.Tensor 'Sqrt_1:0' shape=() dtype=float32>, <tf.Tensor 'Mean_6:0' shape=() dtype=float32>, <tf.Tensor 'Sqrt_2:0' shape=() dtype=float32>, <tf.Tensor 'Mean_9:0' shape=() dtype=float32>, <tf.Tensor 'Sqrt_3:0' shape=() dtype=float32>, <tf.Tensor 'Mean_12:0' shape=() dtype=float32>, <tf.Tensor 'Sqrt_4:0' shape=() dtype=float32>]), ('stats_names', ['reference_Q_mean', 'reference_Q_std', 'reference_actor_Q_mean', 'reference_actor_Q_std', 'reference_action_mean', 'reference_action_std', 'reference_perturbed_action_mean', 'reference_perturbed_action_std']), ('target_init_updates', [<tf.Operation 'group_deps_4' type=NoOp>, <tf.Operation 'group_deps_6' type=NoOp>]), ('target_soft_updates', [<tf.Operation 'group_deps_5' type=NoOp>, <tf.Operation 'group_deps_7' type=NoOp>]), ('initial_state', None)])
--------------------------------------
| episodes                | 100      |
| mean 100 episode reward | -780     |
| prob_satisfiability     | 0        |
| steps                   | 9.9e+04  |
--------------------------------------
Saving model due to mean reward increase: None -> -775.1
Saving model due to mean reward increase: -775.1 -> -750.1
Saving model due to mean reward increase: -750.1 -> -704.9
Saving model due to mean reward increase: -704.9 -> -704.2
Saving model due to mean reward increase: -704.2 -> -685.1
Saving model due to mean reward increase: -685.1 -> -632.6
Saving model due to mean reward increase: -632.6 -> -605.1
Saving model due to mean reward increase: -605.1 -> -598.3
Saving model due to mean reward increase: -598.3 -> -593.8
Saving model due to mean reward increase: -593.8 -> -578.3
--------------------------------------
| episodes                | 200      |
| mean 100 episode reward | -570     |
| prob_satisfiability     | 0        |
| steps                   | 1.99e+05 |
--------------------------------------
Saving model due to mean reward increase: -578.3 -> -574.5
--------------------------------------
| episodes                | 300      |
| mean 100 episode reward | -677     |
| prob_satisfiability     | 0        |
| steps                   | 2.99e+05 |
--------------------------------------
Saving model due to mean reward increase: -574.5 -> -567.9
Saving model due to mean reward increase: -567.9 -> -550.9
Saving model due to mean reward increase: -550.9 -> -518.9
Saving model due to mean reward increase: -518.9 -> -488.9
Saving model due to mean reward increase: -488.9 -> -462.5
--------------------------------------
| episodes                | 400      |
| mean 100 episode reward | -447     |
| prob_satisfiability     | 0        |
| steps                   | 3.99e+05 |
--------------------------------------
Saving model due to mean reward increase: -462.5 -> -447.0
Saving model due to mean reward increase: -447.0 -> -430.7
Restored model with mean reward: -430.7
Total time: 9395.462859392166 seconds
